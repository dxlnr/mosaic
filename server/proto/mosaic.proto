syntax = "proto3";

package mosaic;

service Communication {
  rpc GetGlobalModel(ClientMessage) returns (ServerModel);
  rpc Update(ClientUpdate) returns (ServerMessage);
}

message Parameters {
  // The weights and biases content of a model.
  bytes tensor = 1;
  // The data type which sets how the bytes will be decoded.
  string data_type = 2;
  // The model version that defines the training round of the model.
  uint32 model_version = 3;
}

message ServerMessage {
  uint32 status = 1;
}

message ServerModel {
  // Parameters that contain the model and some metadata from the server.
  Parameters parameters = 1;
  // Status status = 2;
}

message ClientMessage {
  // Client ID.
  uint32 id = 1;
}

message ClientUpdate {
  // Client ID.
  uint32 id = 1;
  // Parameters that contain the model and some metadata from the client.
  Parameters parameters = 2;
}

// message Status {
//   // An error code that can be handled by the client.
//   // The actual error code is defined by `google.rpc.Code`.
//   int32 code = 1;

//   // A developer-facing human-readable error message. It explains the error
//   // and offers an actionable resolution to it.
//   string message = 2;
// }
