syntax = "proto3";

package mosaic;

// service Communication {
//   rpc Join(stream ClientMessage) returns (stream ServerMessage) {}
// }
service Communication {
  rpc GetGlobalModel(ClientMessage) returns (ServerModel);
  rpc Update(ClientUpdate) returns (ServerMessage);
  // rpc SingleRound(stream ClientMessage) returns (ServerMessage);
}

message Parameters {
  repeated bytes tensor = 1;
  string data_type = 2;
}

message ServerMessage {
  //map<string, uint32> msgs = 1;
  string msg = 1;
}

message ServerModel {
  Parameters parameters = 1;
  uint32 id = 2;
}

message ClientMessage {
  //map<string, uint32> msgs = 1;
  //string msg = 1;
  uint32 id = 1;
}

message ClientUpdate {
  Parameters parameters = 1;
  uint32 id = 2;
}


message ClientDefault {
  Parameters parameters = 1;
}

message ServerDefault {
  Parameters parameters = 1;
}
